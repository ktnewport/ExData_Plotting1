## All together now...bind_rows will combine
## both the test_df & train_df into one dataframe.
HAtestANDtrain_df<-bind_rows(test_df, train_df)
## Isolate subject, activity, mean & std variables,
## but not the meanFreq, since that is not a pure of
## a measurement but the frequency components of the
## measurement.
isolate<- select(HAtestANDtrain_df, Subject_ID, Activity, contains("mean"), contains("std"), -contains("Freq"))
## Replacing the Activity numeric code with
## descriptive character labels.
isolate$Activity[isolate$Activity == 1]<- "Walking"
isolate$Activity[isolate$Activity == 2]<- "Walking_Upstairs"
isolate$Activity[isolate$Activity == 3]<- "Walking_Downstairs"
isolate$Activity[isolate$Activity == 4]<- "Sitting"
isolate$Activity[isolate$Activity == 5]<- "Standing"
isolate$Activity[isolate$Activity == 6]<- "Laying"
## Making those labels into factors.
isolate_factor<- mutate(isolate, Activity = as.factor(Activity))
## Now, to separate the measurement variables and
## their angular directions, which are erroneously
## lumped together into single columns,
## denoted by X, Y, or Z.
library(tidyr)
new<-gather(isolate_factor, key, M_Value, -Activity, - Subject_ID)
isolate_factor<- mutate(isolate, Activity = as.factor(Activity))
library(swirl)
install_from_swirl("Exploratory Data Analysis")
link<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(link, destfile = "./exhousehold.txt", method = "curl")
?read.txt
?read.table
readIn<- read.table("./exhousehold.txt", sep = ";", na.strings = "?", header = TRUE)
download.file(link, destfile = "./exhousehold.zip", method = "curl")
?unzip
unzip(zipfile = "./exhousehold.zip")
unzip(zipfile = "./exhousehold.zip")
readIn<- read.table("./household_power_consumption.txt", sep = ";", na.strings = "?", header = TRUE)
View(readIn)
names(readIn)
class(names(readIn))
class(readIn$Voltage)
sum(is.na(readIn$Voltage)))
sum(is.na(readIn$Voltage))
length(readIn$Voltage)
library(dplyr)
class(readIn$Date)
class(readIn$Time)
unclass(readIn$Date)
class(readIn$Date)
?as.Date
as.Date(readIn$Date, "%d/%b/%y")
class(readIn$Date)
?read.table
?class
?read.table
rawdata<- read.table("./household_power_consumption.txt", sep = ";", na.strings = "?", header = TRUE, as.is = !stringsAsFactors)
rawdata<- read.table("./household_power_consumption.txt", sep = ";", na.strings = "?", header = TRUE, stringsAsFactors = FALSE)
class(rawdata$Date)
as.Date(rawdata$Date, "%d/%m/%Y")
class(rawdata[1,1])
class(rawdata$Date)
View(rawdata)
?as.time
?as.Time
library(lubridate)
cutdata<- filter(rawdata, Date == "2007-02-01"| Date == "2007-02-02")
View(cutdata)
rawdata$Date == "2007-02-01"
sum(rawdata$Date == "2007-02-01")
rawdata[1,50]
rawdata$Date
cutdata<- filter(rawdata, Date == "01/02/2007"| Date == "02/02/2007")
View(cutdata)
rawdata$Date == "01/02/2007"
sum(rawdata$Date == "01/02/2007")
rawdata$Date
sum(rawdata$Date == "02/02/2007")
sum(rawdata$Date == "2/2/2007")
cutdata<- filter(rawdata, Date == "1/2/2007"| Date == "2/2/2007")
View(cutdata)
sum(cutdata$Date = "1/2/2007")
sum(cutdata$Date == "1/2/2007")
cutdata1<-strptime(cutdata$Date, "%d/%m%Y")
cutdata1
class(cutdata1)
date1<-dmy(cutdata$Date)
date1
time1<-hms(cutdata$Time)
time1
cutdata[1,1]
trial<-mutate(Date, Date = dmy(cutdata$Date))
trial<-mutate(Date, Date = dmy(Date))
trial<-mutate(cutdata$Date, Date = dmy(Date))
cutdata1<-select(cutdata, Global_active_power : Sub_metering_3)
View(cutdata1)
date_time<-rbind(date1, time1)
View(date_time)
class(time1)
date_time<- cbind(date1,time1)
View(date_time)
class(date_time[1,1])
class(time1[1])
time1
time[2878]
time1[2878]
class(time1[2878])
class(date1[1])
strptime(time1)
time1[1]
time1[2000]
strptime(time1, format = "%H %M %S")
?as.POSIXCt
?as.POSIXct
Time<-as.POSIXlt(time1)
time2<-as.POSIXlt(hms(cutdata$Time))
time2<-as.POSIXlt(hms(cutdata$Time), tz = "UTC")
time2<-as.POSIXlt(hms(cutdata$Time), tz = "GMT")
time1
time1[1000]
date1[1000]
dat<-data.frame()
date_time<-cbind(dat, date1, time1)
date_time<-cbind(dat, date1)
date_time<-rbind(dat, date1)
View(date_time)
class(date_time[1,1])
cutdata2<-mutate(Date, Date = as.Date(Date))
?strptime()
class(cutdata$Date)
class(cutdata$Time)
Sys.time()
Date<-strptime(cutdata$Date, tz="PDT", format = "%d/%m/%Y")
Date
Sys.time()
class(Date)
trial<-cbind(cutdata1, Date )
View(trial)
cutdata1$Date
trial$Date
class(trial$Dat)
class(trial$Date)
Time<-strptime(cutdata$Time, tz="PDT", format = "%H:%M:%S")
Time<-strptime(cutdata$Time, tz="GMT", format = "%H:%M:%S")
Time
Time<-as.POSIXlt(cutdata$Time)
?as.POSIXlt
Time<-as.POSIXlt(cutdata$Time, tz = "GMT", format = "%H:%M")
Time
Time[1000]
?parse
?strptime()
results <-paste(cutdata$Date, cutdata$Time, collapse = NULL, sep = ' ')
results
Date_time<-strptime(results, format = "%d/%m/%Y %H:%M:%S")
Date_time
class(Date_time)
Date_time[1000]
dataready<- cbind(Date_time, cutdata1)
View(dataready)
class(dataready$Date_time)
dataready1<- mutate(dataready, weekday=wday(Date_time, label = TRUE))
View(dataready1)
?wday()
dataready1<- mutate(dataready, weekday=wday(Date_time, label = TRUE, abbr = TRUE))
View(dataready1)
dataready2<- mutate(dataready, weekday=wday(Date_time, label = TRUE, abbr = TRUE))
link<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(link, destfile = "./exhousehold.zip", method = "curl")
unzip(zipfile = "./exhousehold.zip")
rawdata<- read.table("./household_power_consumption.txt", sep = ";", na.strings = "?", header = TRUE, stringsAsFactors = FALSE)
library(dplyr)
cutdata<- filter(rawdata, Date == "1/2/2007"| Date == "2/2/2007")
combo_time <-paste(cutdata$Date, cutdata$Time, collapse = NULL, sep = ' ')
library(lubridate)
Date_time<-strptime(combo_time, format = "%d/%m/%Y %H:%M:%S")
cutdata1<-select(cutdata, Global_active_power : Sub_metering_3)
dataready<- cbind(Date_time, cutdata1)
dataready<- mutate(dataready, weekday=wday(Date_time, label = TRUE, abbr = TRUE))
View(dataready)
dataread$weekday[2880]
dataready$weekday[2880]
dataready$weekday[1000]
hist(dataready$Global_active_power, col = "red", break = 15)
hist(dataready$Global_active_power, col = "red")
par(mfrow = c(1,1), mar = c(4, 4, 2, 1))
hist(dataready$Global_active_power, col = "red")
par(mfrow = c(1,1), mar = c(2, 2, 2, 2))
hist(dataready$Global_active_power, col = "red")
par(mfrow = c(1,1), mar = c(3, 3, 3, 3))
hist(dataready$Global_active_power, col = "red")
hist(dataready$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
hist(dataready$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
hist(dataready$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
hist(dataready$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
title(main = "Global Active Power")
?hist()
hist(dataready$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = paste("Global Active Power"))
?dev.copy
plot1<-hist(dataready$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = paste("Global Active Power"))
dev.copy(dev.cur(), which = "Plot1.png", out.type = "png" )
dev.copy("quartz", which = "Plot1.png", out.type = "png" )
dev.copy("quartz", which = "png", destfile = "./plot1.pgn")
dev.copy("quartz", which = "png", destfile = "./plot1.png")
dev.copy("quartz", out.type = "png", destfile = "./plot1.png")
dev.copy(png, out.type = "png", destfile = "./plot1.png")
dev.copy(png, name.opt = "./plot1.png")
?png
dev.off()
plot1<-hist(dataready$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = paste("Global Active Power"))
dev.copy(device = quartz, which = dev.next(png))
dev.print(device = quartz, out.type = "png", filename = "./plot1.png")
dev.copy(png, file = "plot1.png")
dev.off()
class(dataready$weekday)
?hist()
link<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(link, destfile = "./exhousehold.zip", method = "curl")
unzip(zipfile = "./exhousehold.zip")
rawdata<- read.table("./household_power_consumption.txt", sep = ";", na.strings = "?", header = TRUE, stringsAsFactors = FALSE)
library(dplyr)
cutdata<- filter(rawdata, Date == "1/2/2007"| Date == "2/2/2007")
combo_time <-paste(cutdata$Date, cutdata$Time, collapse = NULL, sep = ' ')
library(lubridate)
Date_time<-strptime(combo_time, format = "%d/%m/%Y %H:%M:%S")
cutdata1<-select(cutdata, Global_active_power : Sub_metering_3)
dataready<- cbind(Date_time, cutdata1)
dataready<- mutate(dataready, weekday=wday(Date_time, label = TRUE, abbr = TRUE))
par("mar")
par("mfrow")
with(dataready, weekday, Global_active_power, main ="", ylab = "Global Active Power (kilowatts", xlim = "Thurs : Sat")
with(dataready, weekday, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"), xlim = "Thurs : Sat")
with(dataready, weekday, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"))
with(dataready, plot(weekday, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"), xlim = Thurs:Sat)
with(dataready, plot(weekday, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"))
with(dataready, plot(weekday, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"))
plot(dataready$weekday, dataready$Global_active_power)
plot(dataready$weekday, dataready$Global_active_power)
?plot()
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"))
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"), phc = "19")
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"), phc = "19", xlab = "")
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"), phc = "19", xlab = "")
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"), phc = "19", xlab = " ")
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts"), phc = "19", xlab = " "))
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", phc = 19, xlab = ""))
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = 19, xlab = ""))
warnings()
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = 19, xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power)
par()
lines(dataready$Date_time, dataready$Global_active_power, lwd = 2)
example(points)
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = NULL, xlab = ""))
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = NULL, xlab = ""))
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ., xlab = ""))
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".:, xlab = ""))
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 2)
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
dev.copy(png, file = "plot2.png")
dev.off()
View(dataready)
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(Date_time, Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, col = c("black", "red", "blue"))
legend("topright", lwd = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png")
dev.off()
?legend()
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par("mar")
par(mar = c(5,5,5,5))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mar = c(3,3,3,3))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mar = c(4,4,4,4))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(5, 4, 4, 2))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(5, 4, 4, 3))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(3, 1, 1, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(3, 2, 2, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(4, 2, 2, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(3, 3, 2, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(3, 4, 2, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(1, 4, 2, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(2, 4, 2, 1))
par(mar = c(2, 4, 2, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
par(mar = c(2, 4, 1, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub meter", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png")
dev.off()
setwd("~/Desktop/cousera/Course 4 Exploratory Data Analysis/Course Project 1/ExData_Plotting1")
par(mar = c(2, 4, 1, 1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png")
dev.off()
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bty = "n", bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mfrow = c(2,2), par = c(2,4,1,1))
par(mfrow = c(2,2), mar = c(2,4,1,1))
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
with(dataready, plot(Date_time, Voltage, main ="", ylab = "Voltage", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
with(dataready, plot(Date_time, Voltage, main ="", ylab = "Voltage", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Voltage, lwd = 1)
par(mfrow = c(2,2), mar = c(3,4,1,1))
## Graph 1
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
##Graph 2
with(dataready, plot(Date_time, Voltage, main ="", ylab = "Voltage", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Voltage, lwd = 1)
par(mfrow = c(2,2), mar = c(4,4,1,1))
## Graph 1
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
##Graph 2
with(dataready, plot(Date_time, Voltage, main ="", ylab = "Voltage", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Voltage, lwd = 1)
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bty = "n", bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bty = "n", bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mfrow = c(2,2), mar = c(4,4,1,1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
with(dataready, plot(Date_time, Global_reactive_power, main ="", ylab = "Global_reactive_power", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Voltage, lwd = 1)
with(dataready, plot(Date_time, Global_reactive_power, main ="", ylab = "Global_reactive_power", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Global_reactive_power, lwd = 1)
par(mfrow = c(2,2), mar = c(4,4,2,1))
## Graph 1
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
##Graph 2
with(dataready, plot(Date_time, Voltage, main ="", ylab = "Voltage", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Voltage, lwd = 1)
## Graph 3
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Graph 4
with(dataready, plot(Date_time, Global_reactive_power, main ="", ylab = "Global_reactive_power", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Global_reactive_power, lwd = 1)
##Fun with mfrow & margins
par(mfrow = c(2,2), mar = c(4,4,2,1))
## Graph 1
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
##Graph 2
with(dataready, plot(Date_time, Voltage, main ="", ylab = "Voltage", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Voltage, lwd = 1)
## Graph 3
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, cex = 0.7, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Graph 4
with(dataready, plot(Date_time, Global_reactive_power, main ="", ylab = "Global_reactive_power", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Global_reactive_power, lwd = 1)
dev.copy(png, file = "plot4.png")
dev.off()
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, cex = 0.7, bty = "n", bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mfrow = c(2,2), mar = c(4,4,2,1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topleft", lwd = 1, cex = 0.7, bty = "n", bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", cex = 0.7, bty = "n", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mfrow = c(2,2), mar = c(4,4,2,1))
## Graph 1
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
##Graph 2
with(dataready, plot(Date_time, Voltage, main ="", ylab = "Voltage", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Voltage, lwd = 1)
## Graph 3
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", cex = 0.7, bty = "n", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Graph 4
with(dataready, plot(Date_time, Global_reactive_power, main ="", ylab = "Global_reactive_power", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Global_reactive_power, lwd = 1)
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(1,1), mar = c(4,4,2,1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", cex = 0.7, bty = "n", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", bty = "n", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Graph 4
par(mfrow = c(1,1), mar = c(4,4,2,1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", bty = "n", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mfrow = c(1,1), mar = c(4,4,2,1))
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
##Fun with mfrow & margins
par(mfrow = c(2,2), mar = c(4,4,2,1))
## Graph 1
with(dataready, plot(Date_time, Global_active_power, main ="", ylab = "Global Active Power (kilowatts)", pch = ".", xlab = ""))
lines(dataready$Date_time, dataready$Global_active_power, lwd = 1)
##Graph 2
with(dataready, plot(Date_time, Voltage, main ="", ylab = "Voltage", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Voltage, lwd = 1)
## Graph 3
with(dataready, plot(Date_time, Sub_metering_1, type = "n", main = "", ylab = "Engery sub metering", xlab = ""))
lines(dataready$Date_time, dataready$Sub_metering_1, col = "black")
lines(dataready$Date_time, dataready$Sub_metering_2, col = "red")
lines(dataready$Date_time, dataready$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, bty = "n", bg = "transparent", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Graph 4
with(dataready, plot(Date_time, Global_reactive_power, main ="", ylab = "Global_reactive_power", pch = ".", xlab = "datetime"))
lines(dataready$Date_time, dataready$Global_reactive_power, lwd = 1)
dev.copy(png, file = "plot4.png")
dev.off()
